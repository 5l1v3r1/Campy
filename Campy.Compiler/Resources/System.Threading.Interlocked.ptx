//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-22781540
// Cuda compilation tools, release 9.0, V9.0.176
// Based on LLVM 3.4svn
//

.version 6.0
.target sm_30
.address_size 64

	// .globl	_Z50System_Threading_Interlocked_CompareExchange_Int32PhS_S_

.visible .func  (.param .b64 func_retval0) _Z50System_Threading_Interlocked_CompareExchange_Int32PhS_S_(
	.param .b64 _Z50System_Threading_Interlocked_CompareExchange_Int32PhS_S__param_0,
	.param .b64 _Z50System_Threading_Interlocked_CompareExchange_Int32PhS_S__param_1,
	.param .b64 _Z50System_Threading_Interlocked_CompareExchange_Int32PhS_S__param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [_Z50System_Threading_Interlocked_CompareExchange_Int32PhS_S__param_1];
	ld.param.u64 	%rd3, [_Z50System_Threading_Interlocked_CompareExchange_Int32PhS_S__param_2];
	ld.u32 	%r1, [%rd2+4];
	ld.u32 	%r2, [%rd2+8];
	ld.u64 	%rd1, [%rd2];
	ld.u32 	%r3, [%rd1];
	st.u32 	[%rd3], %r3;
	ld.u32 	%r4, [%rd1];
	setp.ne.s32	%p1, %r4, %r2;
	@%p1 bra 	BB0_2;

	st.u32 	[%rd1], %r1;

BB0_2:
	mov.u64 	%rd4, 0;
	st.param.b64	[func_retval0+0], %rd4;
	ret;
}

	// .globl	_Z44System_Threading_Interlocked_Increment_Int32PhS_S_
.visible .func  (.param .b64 func_retval0) _Z44System_Threading_Interlocked_Increment_Int32PhS_S_(
	.param .b64 _Z44System_Threading_Interlocked_Increment_Int32PhS_S__param_0,
	.param .b64 _Z44System_Threading_Interlocked_Increment_Int32PhS_S__param_1,
	.param .b64 _Z44System_Threading_Interlocked_Increment_Int32PhS_S__param_2
)
{
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_Z44System_Threading_Interlocked_Increment_Int32PhS_S__param_1];
	ld.param.u64 	%rd2, [_Z44System_Threading_Interlocked_Increment_Int32PhS_S__param_2];
	ld.u64 	%rd3, [%rd1];
	ld.u32 	%r1, [%rd3];
	add.s32 	%r2, %r1, 1;
	st.u32 	[%rd3], %r2;
	st.u32 	[%rd2], %r2;
	mov.u64 	%rd4, 0;
	st.param.b64	[func_retval0+0], %rd4;
	ret;
}

	// .globl	_Z44System_Threading_Interlocked_Decrement_Int32PhS_S_
.visible .func  (.param .b64 func_retval0) _Z44System_Threading_Interlocked_Decrement_Int32PhS_S_(
	.param .b64 _Z44System_Threading_Interlocked_Decrement_Int32PhS_S__param_0,
	.param .b64 _Z44System_Threading_Interlocked_Decrement_Int32PhS_S__param_1,
	.param .b64 _Z44System_Threading_Interlocked_Decrement_Int32PhS_S__param_2
)
{
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_Z44System_Threading_Interlocked_Decrement_Int32PhS_S__param_1];
	ld.param.u64 	%rd2, [_Z44System_Threading_Interlocked_Decrement_Int32PhS_S__param_2];
	ld.u64 	%rd3, [%rd1];
	ld.u32 	%r1, [%rd3];
	add.s32 	%r2, %r1, -1;
	st.u32 	[%rd3], %r2;
	st.u32 	[%rd2], %r2;
	mov.u64 	%rd4, 0;
	st.param.b64	[func_retval0+0], %rd4;
	ret;
}

	// .globl	_Z38System_Threading_Interlocked_Add_Int32PhS_S_
.visible .func  (.param .b64 func_retval0) _Z38System_Threading_Interlocked_Add_Int32PhS_S_(
	.param .b64 _Z38System_Threading_Interlocked_Add_Int32PhS_S__param_0,
	.param .b64 _Z38System_Threading_Interlocked_Add_Int32PhS_S__param_1,
	.param .b64 _Z38System_Threading_Interlocked_Add_Int32PhS_S__param_2
)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_Z38System_Threading_Interlocked_Add_Int32PhS_S__param_1];
	ld.param.u64 	%rd2, [_Z38System_Threading_Interlocked_Add_Int32PhS_S__param_2];
	ld.u64 	%rd3, [%rd1];
	ld.u32 	%r1, [%rd1+4];
	ld.u32 	%r2, [%rd3];
	add.s32 	%r3, %r2, %r1;
	st.u32 	[%rd3], %r3;
	st.u32 	[%rd2], %r3;
	mov.u64 	%rd4, 0;
	st.param.b64	[func_retval0+0], %rd4;
	ret;
}

	// .globl	_Z43System_Threading_Interlocked_Exchange_Int32PhS_S_
.visible .func  (.param .b64 func_retval0) _Z43System_Threading_Interlocked_Exchange_Int32PhS_S_(
	.param .b64 _Z43System_Threading_Interlocked_Exchange_Int32PhS_S__param_0,
	.param .b64 _Z43System_Threading_Interlocked_Exchange_Int32PhS_S__param_1,
	.param .b64 _Z43System_Threading_Interlocked_Exchange_Int32PhS_S__param_2
)
{
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_Z43System_Threading_Interlocked_Exchange_Int32PhS_S__param_1];
	ld.param.u64 	%rd2, [_Z43System_Threading_Interlocked_Exchange_Int32PhS_S__param_2];
	ld.u64 	%rd3, [%rd1];
	ld.u32 	%r1, [%rd1+4];
	ld.u32 	%r2, [%rd3];
	st.u32 	[%rd2], %r2;
	st.u32 	[%rd3], %r1;
	mov.u64 	%rd4, 0;
	st.param.b64	[func_retval0+0], %rd4;
	ret;
}


