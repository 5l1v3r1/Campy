//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-22781540
// Cuda compilation tools, release 9.0, V9.0.176
// Based on LLVM 3.4svn
//

.version 6.0
.target sm_35
.address_size 64

	// .weak	cudaMalloc
.extern .func  (.param .b64 func_retval0) _Z14Heap_AllocTypeP12tMD_TypeDef_
(
	.param .b64 _Z14Heap_AllocTypeP12tMD_TypeDef__param_0
)
;
.extern .func _Z20Heap_MakeUndeletablePh
(
	.param .b64 _Z20Heap_MakeUndeletablePh_param_0
)
;
.extern .func  (.param .b64 func_retval0) _Z7Gmallocy
(
	.param .b64 _Z7Gmallocy_param_0
)
;
.extern .func _Z5CrashPKcz
(
	.param .b64 _Z5CrashPKcz_param_0,
	.param .align 8 .b8 %VAParam[]
)
;
.extern .func  (.param .b64 func_retval0) _Z11MethodStateP8tThread_P10tMetaData_jP13tMethodState_
(
	.param .b64 _Z11MethodStateP8tThread_P10tMetaData_jP13tMethodState__param_0,
	.param .b64 _Z11MethodStateP8tThread_P10tMetaData_jP13tMethodState__param_1,
	.param .b32 _Z11MethodStateP8tThread_P10tMetaData_jP13tMethodState__param_2,
	.param .b64 _Z11MethodStateP8tThread_P10tMetaData_jP13tMethodState__param_3
)
;
.extern .func free
(
	.param .b64 free_param_0
)
;
.extern .func  (.param .b64 func_retval0) _Z6msTimev
(

)
;
.extern .func _Z7SleepMSj
(
	.param .b32 _Z7SleepMSj_param_0
)
;
.extern .func _Z13Heap_SetRootsP11tHeapRoots_Pvj
(
	.param .b64 _Z13Heap_SetRootsP11tHeapRoots_Pvj_param_0,
	.param .b64 _Z13Heap_SetRootsP11tHeapRoots_Pvj_param_1,
	.param .b32 _Z13Heap_SetRootsP11tHeapRoots_Pvj_param_2
)
;
.global .align 8 .u64 __nv_static_27__14_Thread_cpp1_ii_427e0b11_pAllThreads;
.global .align 8 .u64 __nv_static_27__14_Thread_cpp1_ii_427e0b11_pCurrentThread;
.global .align 4 .u32 _ZZ6ThreadvE8threadID;
.extern .global .align 8 .b64 types;
.global .align 16 .b8 $str[32] = {84, 104, 114, 101, 97, 100, 45, 108, 111, 99, 97, 108, 32, 115, 116, 97, 99, 107, 32, 105, 115, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0};

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;

//c:\program files\nvidia gpu computing toolkit\cuda\v9.0\include\cuda_device_runtime_api.h:77   return cudaErrorUnknown;
	.loc 2 77 3
	ret;
}

	// .weak	cudaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;

//c:\program files\nvidia gpu computing toolkit\cuda\v9.0\include\cuda_device_runtime_api.h:82   return cudaErrorUnknown;
	.loc 2 82 3
	ret;
}

	// .weak	cudaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;

//c:\program files\nvidia gpu computing toolkit\cuda\v9.0\include\cuda_device_runtime_api.h:87   return cudaErrorUnknown;
	.loc 2 87 3
	ret;
}

	// .weak	cudaGetDevice
.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;

//c:\program files\nvidia gpu computing toolkit\cuda\v9.0\include\cuda_device_runtime_api.h:92   return cudaErrorUnknown;
	.loc 2 92 3
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;

//c:\program files\nvidia gpu computing toolkit\cuda\v9.0\include\cuda_device_runtime_api.h:97   return cudaErrorUnknown;
	.loc 2 97 3
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;

//c:\program files\nvidia gpu computing toolkit\cuda\v9.0\include\cuda_device_runtime_api.h:102   return cudaErrorUnknown;
	.loc 2 102 3
	ret;
}

	// .globl	_Z6Threadv
.visible .func  (.param .b64 func_retval0) _Z6Threadv(

)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<16>;



//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:39 	pThis = (tThread*)Heap_AllocType(types[TYPE_SYSTEM_THREADING_THREAD]);
	.loc 1 39 2
	ld.global.u64 	%rd7, [types];
	ld.u64 	%rd8, [%rd7+264];

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:39 	pThis = (tThread*)Heap_AllocType(types[TYPE_SYSTEM_THREADING_THREAD]);
	.loc 1 39 20
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z14Heap_AllocTypeP12tMD_TypeDef_, 
	(
	param0
	);
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 0

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:40 	Heap_MakeUndeletable((HEAP_PTR)pThis);
	.loc 1 40 2
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	call.uni 
	_Z20Heap_MakeUndeletablePh, 
	(
	param0
	);
	
	//{
	}// Callseq End 1

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:41 	pThis->threadID = ++threadID;
	.loc 1 41 2
	ld.global.u32 	%r1, [_ZZ6ThreadvE8threadID];
	add.s32 	%r2, %r1, 1;
	st.global.u32 	[_ZZ6ThreadvE8threadID], %r2;
	st.u32 	[%rd1], %r2;
	mov.u32 	%r3, 0;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:43 	pThis->threadExitValue = 0;
	.loc 1 43 2
	st.u32 	[%rd1+48], %r3;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:44 	pThis->nextFinallyUnwindStack = 0;
	.loc 1 44 2
	st.u32 	[%rd1+64], %r3;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:46 	pThis->hasParam = 0;
	.loc 1 46 2
	st.u32 	[%rd1+96], %r3;
	mov.u32 	%r4, 8;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:50 	pThis->state = THREADSTATE_UNSTARTED;
	.loc 1 50 2
	st.u32 	[%rd1+24], %r4;
	mov.u64 	%rd15, 0;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:42 	pThis->pCurrentMethodState = NULL;
	.loc 1 42 2
	st.u64 	[%rd1+40], %rd15;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:45 	pThis->pAsync = NULL;
	.loc 1 45 2
	st.u64 	[%rd1+88], %rd15;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:48 	pThis->startDelegate = NULL;
	.loc 1 48 2
	st.u64 	[%rd1+8], %rd15;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:49 	pThis->param = NULL;
	.loc 1 49 2
	st.u64 	[%rd1+16], %rd15;
	mov.u64 	%rd9, 10016;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:53 	pThis->pThreadStack = TMALLOC(tThreadStack);
	.loc 1 53 39
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z7Gmallocy, 
	(
	param0
	);
	ld.param.b64	%rd3, [retval0+0];
	
	//{
	}// Callseq End 2
	st.u64 	[%rd1+104], %rd3;
	mov.pred 	%p1, 0;
	@%p1 bra 	BB6_2;

BB6_1:
	add.s64 	%rd10, %rd3, %rd15;
	mov.u16 	%rs1, 0;
	st.u8 	[%rd10], %rs1;
	add.s64 	%rd15, %rd15, 1;
	setp.lt.u64	%p2, %rd15, 10016;
	@%p2 bra 	BB6_1;

BB6_2:

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:56 	pThis->pThreadStack->ofs = 0;
	.loc 1 56 2
	ld.u64 	%rd11, [%rd1+104];
	st.u32 	[%rd11+10000], %r3;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:57 	pThis->pThreadStack->pNext = NULL;
	.loc 1 57 2
	ld.u64 	%rd12, [%rd1+104];
	mov.u64 	%rd13, 0;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:57 	pThis->pThreadStack->pNext = NULL;
	.loc 1 57 2
	st.u64 	[%rd12+10008], %rd13;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:60 	pThis->pNextThread = pAllThreads;
	.loc 1 60 2
	ld.global.u64 	%rd14, [__nv_static_27__14_Thread_cpp1_ii_427e0b11_pAllThreads];
	st.u64 	[%rd1+112], %rd14;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:61 	pAllThreads = pThis;
	.loc 1 61 2
	st.global.u64 	[__nv_static_27__14_Thread_cpp1_ii_427e0b11_pAllThreads], %rd1;
	st.param.b64	[func_retval0+0], %rd1;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:63 	return pThis;
	.loc 1 63 2
	ret;
}

	// .globl	_Z17Thread_StackAllocP8tThread_j
.visible .func  (.param .b64 func_retval0) _Z17Thread_StackAllocP8tThread_j(
	.param .b64 _Z17Thread_StackAllocP8tThread_j_param_0,
	.param .b32 _Z17Thread_StackAllocP8tThread_j_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<18>;


	ld.param.u64 	%rd9, [_Z17Thread_StackAllocP8tThread_j_param_0];
	ld.param.u32 	%r1, [_Z17Thread_StackAllocP8tThread_j_param_1];

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:67 	tThreadStack *pStack = pThread->pThreadStack;
	.loc 1 67 23
	ld.u64 	%rd1, [%rd9+104];

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:68 	void *pAddr = pStack->memory + pStack->ofs;
	.loc 1 68 14
	add.s64 	%rd2, %rd1, 10000;
	ld.u32 	%rd3, [%rd1+10000];
	add.s64 	%rd10, %rd1, %rd3;
	mov.u32 	%r2, -1414812757;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:70 	*(U32*)pAddr = 0xabababab;
	.loc 1 70 2
	st.u32 	[%rd10], %r2;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:72 	pStack->ofs += 4;
	.loc 1 72 2
	ld.u32 	%r3, [%rd1+10000];
	add.s32 	%r4, %r1, %r3;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:74 	pStack->ofs += size;
	.loc 1 74 2
	add.s32 	%r5, %r4, 4;
	st.u32 	[%rd1+10000], %r5;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:75 	if (pStack->ofs > THREADSTACK_CHUNK_SIZE) {
	.loc 1 75 2
	setp.lt.u32	%p1, %r5, 10001;
	@%p1 bra 	BB7_2;


//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:76 		Crash("Thread-local stack is too large");
	.loc 1 76 3
	mov.u64 	%rd11, $str;
	cvta.global.u64 	%rd12, %rd11;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	call.uni 
	_Z5CrashPKcz, 
	(
	param0
	);
	
	//{
	}// Callseq End 3

BB7_2:

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:71 	pAddr = ((U32*)pAddr) + 1;
	.loc 1 71 2
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd5, %rd1, %rd4;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:79 	memset(pAddr, 0xcd, size);
	.loc 1 79 2
	cvt.u64.u32	%rd6, %r1;
	mov.u64 	%rd17, 0;
	setp.eq.s32	%p2, %r1, 0;
	@%p2 bra 	BB7_4;

BB7_3:
	add.s64 	%rd14, %rd5, %rd17;
	mov.u16 	%rs1, 205;
	st.u8 	[%rd14], %rs1;
	add.s64 	%rd17, %rd17, 1;
	setp.lt.u64	%p3, %rd17, %rd6;
	@%p3 bra 	BB7_3;

BB7_4:

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:80 	*(U32*)(((char*)pAddr) + size) = 0xfbfbfbfb;
	.loc 1 80 2
	add.s64 	%rd15, %rd4, %rd6;
	add.s64 	%rd16, %rd1, %rd15;
	mov.u32 	%r6, -67372037;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:80 	*(U32*)(((char*)pAddr) + size) = 0xfbfbfbfb;
	.loc 1 80 2
	st.u32 	[%rd16], %r6;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:81 	pStack->ofs += 4;
	.loc 1 81 2
	ld.u32 	%r7, [%rd2];
	add.s32 	%r8, %r7, 4;
	st.u32 	[%rd2], %r8;
	st.param.b64	[func_retval0+0], %rd5;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:83 	return pAddr;
	.loc 1 83 2
	ret;
}

	// .globl	_Z16Thread_StackFreeP8tThread_Pv
.visible .func _Z16Thread_StackFreeP8tThread_Pv(
	.param .b64 _Z16Thread_StackFreeP8tThread_Pv_param_0,
	.param .b64 _Z16Thread_StackFreeP8tThread_Pv_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd7, [_Z16Thread_StackFreeP8tThread_Pv_param_0];
	ld.param.u64 	%rd8, [_Z16Thread_StackFreeP8tThread_Pv_param_1];

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:87 	tThreadStack *pStack = pThread->pThreadStack;
	.loc 1 87 23
	ld.u64 	%rd9, [%rd7+104];

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:89 	pAddr = ((U32*)pAddr) - 1;
	.loc 1 89 2
	add.s64 	%rd1, %rd8, -4;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:90 	memset(pAddr, 0xfe, pStack->ofs - (U32)(((unsigned char*)pAddr) - pStack->memory));
	.loc 1 90 2
	add.s64 	%rd2, %rd9, 10000;
	ld.u32 	%r2, [%rd9+10000];
	sub.s64 	%rd10, %rd1, %rd9;
	cvt.u32.u64	%r1, %rd10;
	sub.s32 	%r3, %r2, %r1;
	cvt.u64.u32	%rd3, %r3;
	mov.u64 	%rd12, 0;
	setp.eq.s32	%p1, %r3, 0;
	@%p1 bra 	BB8_2;

BB8_1:
	add.s64 	%rd11, %rd1, %rd12;
	mov.u16 	%rs1, 254;
	st.u8 	[%rd11], %rs1;
	add.s64 	%rd12, %rd12, 1;
	setp.lt.u64	%p2, %rd12, %rd3;
	@%p2 bra 	BB8_1;

BB8_2:

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:92 	pStack->ofs = (U32)(((unsigned char*)pAddr) - pStack->memory);
	.loc 1 92 2
	st.u32 	[%rd2], %r1;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:93 }
	.loc 1 93 1
	ret;
}

	// .globl	_Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj
.visible .func _Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj(
	.param .b64 _Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj_param_0,
	.param .b64 _Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj_param_1,
	.param .b32 _Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj_param_2,
	.param .b64 _Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj_param_3,
	.param .b32 _Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd7, [_Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj_param_0];
	ld.param.u64 	%rd8, [_Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj_param_1];
	ld.param.u32 	%r2, [_Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj_param_2];
	ld.param.u64 	%rd6, [_Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj_param_3];
	ld.param.u32 	%r1, [_Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj_param_4];
	mov.u64 	%rd13, 0;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:97 	pThis->pCurrentMethodState = MethodState(pThis, pMetaData, entryPointToken, NULL);
	.loc 1 97 31
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z11MethodStateP8tThread_P10tMetaData_jP13tMethodState_, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 4
	st.u64 	[%rd7+40], %rd1;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:99 	if (paramBytes > 0) {
	.loc 1 99 2
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB9_3;


//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:100 		memcpy(pThis->pCurrentMethodState->pParamsLocals, params, paramBytes);
	.loc 1 100 3
	ld.u64 	%rd2, [%rd1+48];
	cvt.u64.u32	%rd3, %r1;
	@%p1 bra 	BB9_3;

BB9_2:
	add.s64 	%rd11, %rd6, %rd13;
	ld.u8 	%rs1, [%rd11];
	add.s64 	%rd12, %rd2, %rd13;
	st.u8 	[%rd12], %rs1;
	add.s64 	%rd13, %rd13, 1;
	setp.lt.u64	%p3, %rd13, %rd3;
	@%p3 bra 	BB9_2;

BB9_3:

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:102 }
	.loc 1 102 1
	ret;
}

	// .globl	_Z14Thread_Executev
.visible .func  (.param .b32 func_retval0) _Z14Thread_Executev(

)
{
	.reg .pred 	%p<9>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<31>;



//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:118 	pThread = pAllThreads;
	.loc 1 118 2
	ld.global.u64 	%rd27, [__nv_static_27__14_Thread_cpp1_ii_427e0b11_pAllThreads];
	mov.u32 	%r5, 0;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:120 	pThread->state = THREADSTATE_RUNNING;
	.loc 1 120 2
	st.u32 	[%rd27+24], %r5;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:122 	pCurrentThread = pThread;
	.loc 1 122 2
	st.global.u64 	[__nv_static_27__14_Thread_cpp1_ii_427e0b11_pCurrentThread], %rd27;
	bra.uni 	BB10_1;

BB10_5:
	mov.u64 	%rd27, %rd28;

BB10_1:
	mov.u32 	%r14, -1;
	bra.uni 	BB10_2;

BB10_15:

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:234 				SleepMS(minSleepTime);
	.loc 1 234 5
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r14;
	call.uni 
	_Z7SleepMSj, 
	(
	param0
	);
	
	//{
	}// Callseq End 8

BB10_2:
	mov.u64 	%rd28, %rd27;

BB10_3:

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:176 			pThread = pThread->pNextThread;
	.loc 1 176 4
	ld.u64 	%rd13, [%rd28+112];

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:177 			if (pThread == NULL) {
	.loc 1 177 4
	setp.eq.s64	%p1, %rd13, 0;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:178 				pThread = pAllThreads;
	.loc 1 178 5
	ld.global.u64 	%rd14, [__nv_static_27__14_Thread_cpp1_ii_427e0b11_pAllThreads];

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:177 			if (pThread == NULL) {
	.loc 1 177 4
	selp.b64	%rd28, %rd14, %rd13, %p1;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:181 			pCurrentThread = pThread;
	.loc 1 181 4
	st.global.u64 	[__nv_static_27__14_Thread_cpp1_ii_427e0b11_pCurrentThread], %rd28;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:182 			if ((pThread->state & (~THREADSTATE_BACKGROUND)) != 0) {
	.loc 1 182 4
	add.s64 	%rd5, %rd28, 24;
	ld.u32 	%r7, [%rd28+24];
	and.b32  	%r8, %r7, -5;
	setp.ne.s32	%p2, %r8, 0;
	@%p2 bra 	BB10_3;


//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:186 			if (pThread->pAsync != NULL) {
	.loc 1 186 4
	ld.u64 	%rd6, [%rd5+64];
	setp.eq.s64	%p3, %rd6, 0;
	@%p3 bra 	BB10_5;


//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:189 				if (pAsync->sleepTime >= 0) {
	.loc 1 189 5
	ld.u32 	%r9, [%rd6];
	setp.gt.s32	%p4, %r9, -1;
	@%p4 bra 	BB10_11;
	bra.uni 	BB10_7;

BB10_11:

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:191 					U64 nowTime = msTime();
	.loc 1 191 20
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6msTimev, 
	(
	);
	ld.param.b64	%rd24, [retval0+0];
	
	//{
	}// Callseq End 7

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:192 					I32 msSleepRemaining = pAsync->sleepTime - (I32)(nowTime - pAsync->startTime);
	.loc 1 192 27
	ld.u64 	%rd25, [%rd6+24];
	sub.s64 	%rd26, %rd24, %rd25;
	cvt.u32.u64	%r12, %rd26;
	ld.u32 	%r13, [%rd6];
	sub.s32 	%r2, %r13, %r12;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:193 					if (msSleepRemaining <= 0) {
	.loc 1 193 6
	setp.lt.s32	%p7, %r2, 1;
	@%p7 bra 	BB10_12;

	min.u32 	%r14, %r2, %r14;
	bra.uni 	BB10_14;

BB10_7:

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:203 					tMethodState *pMethodState = pThread->pCurrentMethodState;
	.loc 1 203 33
	ld.u64 	%rd17, [%rd5+16];

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:208 					if (METHOD_ISSTATIC(pMethodState->pMethod)) {
	.loc 1 208 6
	add.s64 	%rd8, %rd17, 8;
	ld.u64 	%rd18, [%rd17+8];

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:212 						pThis = *(PTR*)pMethodState->pParamsLocals;
	.loc 1 212 7
	ld.u64 	%rd9, [%rd17+48];
	mov.u64 	%rd29, 0;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:208 					if (METHOD_ISSTATIC(pMethodState->pMethod)) {
	.loc 1 208 6
	ld.u8 	%rs1, [%rd18+26];
	and.b16  	%rs2, %rs1, 16;
	setp.ne.s16	%p5, %rs2, 0;
	mov.u64 	%rd30, %rd29;
	@%p5 bra 	BB10_9;


//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:212 						pThis = *(PTR*)pMethodState->pParamsLocals;
	.loc 1 212 7
	ld.u64 	%rd29, [%rd9];
	mov.u64 	%rd30, 4;

BB10_9:

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:215 					unblocked = pAsync->checkFn(pThis, pMethodState->pParamsLocals + thisOfs, pMethodState->pEvalStack, pAsync);
	.loc 1 215 6
	ld.u64 	%rd20, [%rd6+8];
	ld.u64 	%rd21, [%rd8+24];
	add.s64 	%rd22, %rd9, %rd30;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:215 					unblocked = pAsync->checkFn(pThis, pMethodState->pParamsLocals + thisOfs, pMethodState->pEvalStack, pAsync);
	.loc 1 215 18
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd29;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd22;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd21;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd6;
	.param .b32 retval0;
	prototype_5 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _, .param .b64 _, .param .b64 _);
	call (retval0), 
	%rd20, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_5;
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 5

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:216 					if (unblocked) {
	.loc 1 216 6
	setp.eq.s32	%p6, %r11, 0;
	mov.u32 	%r14, 5;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:216 					if (unblocked) {
	.loc 1 216 6
	@%p6 bra 	BB10_14;
	bra.uni 	BB10_10;

BB10_14:

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:231 			if (pThread == pPrevThread) {
	.loc 1 231 4
	setp.ne.s64	%p8, %rd28, %rd27;
	@%p8 bra 	BB10_3;
	bra.uni 	BB10_15;

BB10_12:
	mov.u64 	%rd27, %rd28;
	bra.uni 	BB10_1;

BB10_10:

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:220 						free(pAsync);
	.loc 1 220 7
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	call.uni 
	free, 
	(
	param0
	);
	
	//{
	}// Callseq End 6
	mov.u64 	%rd23, 0;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:222 						pThread->pAsync = NULL;
	.loc 1 222 7
	st.u64 	[%rd5+64], %rd23;

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:223 						break;
	.loc 1 223 7
	mov.u64 	%rd27, %rd28;
	bra.uni 	BB10_1;
}

	// .globl	_Z17Thread_GetCurrentv
.visible .func  (.param .b64 func_retval0) _Z17Thread_GetCurrentv(

)
{
	.reg .b64 	%rd<2>;



//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:242 	return pCurrentThread;
	.loc 1 242 2
	ld.global.u64 	%rd1, [__nv_static_27__14_Thread_cpp1_ii_427e0b11_pCurrentThread];
	st.param.b64	[func_retval0+0], %rd1;
	ret;
}

	// .globl	_Z19Thread_GetHeapRootsP11tHeapRoots_
.visible .func _Z19Thread_GetHeapRootsP11tHeapRoots_(
	.param .b64 _Z19Thread_GetHeapRootsP11tHeapRoots__param_0
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd8, [_Z19Thread_GetHeapRootsP11tHeapRoots__param_0];

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:248 	pThread = pAllThreads;
	.loc 1 248 2
	ld.global.u64 	%rd15, [__nv_static_27__14_Thread_cpp1_ii_427e0b11_pAllThreads];

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:249 	while (pThread != NULL) {
	.loc 1 249 2
	setp.eq.s64	%p1, %rd15, 0;
	@%p1 bra 	BB12_4;

BB12_1:

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:252 		pMethodState = pThread->pCurrentMethodState;
	.loc 1 252 3
	add.s64 	%rd3, %rd15, 40;
	ld.u64 	%rd16, [%rd15+40];

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:253 		while (pMethodState != NULL) {
	.loc 1 253 3
	setp.eq.s64	%p2, %rd16, 0;
	@%p2 bra 	BB12_3;

BB12_2:

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:255 			Heap_SetRoots(pHeapRoots, pMethodState->pEvalStack, pMethodState->pMethod->pJITted->maxStack);
	.loc 1 255 4
	ld.u64 	%rd9, [%rd16+32];
	ld.u64 	%rd10, [%rd16+8];
	ld.u64 	%rd11, [%rd10+56];
	ld.u32 	%r1, [%rd11+8];
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	call.uni 
	_Z13Heap_SetRootsP11tHeapRoots_Pvj, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 9

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:257 			Heap_SetRoots(pHeapRoots, pMethodState->pParamsLocals,
	.loc 1 257 4
	ld.u64 	%rd12, [%rd16+48];
	ld.u64 	%rd13, [%rd16+8];
	ld.u64 	%rd14, [%rd13+56];
	ld.u32 	%r2, [%rd14+12];
	ld.u32 	%r3, [%rd13+80];
	add.s32 	%r4, %r2, %r3;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	call.uni 
	_Z13Heap_SetRootsP11tHeapRoots_Pvj, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 10

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:260 			pMethodState = pMethodState->pCaller;
	.loc 1 260 4
	ld.u64 	%rd16, [%rd16+96];

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:253 		while (pMethodState != NULL) {
	.loc 1 253 3
	setp.ne.s64	%p3, %rd16, 0;
	@%p3 bra 	BB12_2;

BB12_3:

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:263 		pThread = pThread->pNextThread;
	.loc 1 263 3
	ld.u64 	%rd15, [%rd3+72];

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:249 	while (pThread != NULL) {
	.loc 1 249 2
	setp.ne.s64	%p4, %rd15, 0;
	@%p4 bra 	BB12_1;

BB12_4:

//C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c:265 }
	.loc 1 265 1
	ret;
}

	.file	1 "C:/Users/kenne/Documents/Campy/Campy.Runtime/Native/Thread.c", 1512766358, 8484
	.file	2 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v9.0\\include\\cuda_device_runtime_api.h", 1504359958, 14836

