//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-22781540
// Cuda compilation tools, release 9.0, V9.0.176
// Based on LLVM 3.4svn
//

.version 6.0
.target sm_35
.address_size 64

	// .weak	cudaMalloc
.extern .func  (.param .b64 func_retval0) _Z22SystemString_GetStringPhPj
(
	.param .b64 _Z22SystemString_GetStringPhPj_param_0,
	.param .b64 _Z22SystemString_GetStringPhPj_param_1
)
;
.extern .func  (.param .b64 func_retval0) _Z7Gmallocy
(
	.param .b64 _Z7Gmallocy_param_0
)
;
.global .align 4 .u32 __nv_static_35__22_System_Console_cpp1_ii_60669a07_nextKeybC = -1;

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaGetDevice
.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z20System_Console_WritePhS_S_
.visible .func  (.param .b64 func_retval0) _Z20System_Console_WritePhS_S_(
	.param .b64 _Z20System_Console_WritePhS_S__param_0,
	.param .b64 _Z20System_Console_WritePhS_S__param_1,
	.param .b64 _Z20System_Console_WritePhS_S__param_2
)
{
	.local .align 4 .b8 	__local_depot6[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	mov.u64 	%rd8, __local_depot6;
	cvta.local.u64 	%SP, %rd8;
	ld.param.u64 	%rd3, [_Z20System_Console_WritePhS_S__param_1];
	add.u64 	%rd4, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd4;
	ld.u64 	%rd2, [%rd3];
	setp.eq.s64	%p1, %rd2, 0;
	@%p1 bra 	BB6_4;

	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd4;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z22SystemString_GetStringPhPj, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rd6, [retval0+0];
	
	//{
	}// Callseq End 0
	ld.local.u32 	%r6, [%rd1];
	setp.eq.s32	%p2, %r6, 0;
	@%p2 bra 	BB6_4;

BB6_2:
	mov.u32 	%r4, 128;
	min.u32 	%r5, %r4, %r6;
	sub.s32 	%r3, %r6, %r5;
	setp.ne.s32	%p3, %r6, %r5;
	mov.u32 	%r6, %r3;
	@%p3 bra 	BB6_2;

	st.local.u32 	[%rd1], %r3;

BB6_4:
	mov.u64 	%rd7, 0;
	st.param.b64	[func_retval0+0], %rd7;
	ret;
}

.func  (.param .b32 func_retval0) _ZN44_INTERNAL_22_System_Console_cpp1_ii_60669a0722Internal_ReadKey_CheckEPhS0_S0_P11tAsyncCall_(
	.param .b64 _ZN44_INTERNAL_22_System_Console_cpp1_ii_60669a0722Internal_ReadKey_CheckEPhS0_S0_P11tAsyncCall__param_0,
	.param .b64 _ZN44_INTERNAL_22_System_Console_cpp1_ii_60669a0722Internal_ReadKey_CheckEPhS0_S0_P11tAsyncCall__param_1,
	.param .b64 _ZN44_INTERNAL_22_System_Console_cpp1_ii_60669a0722Internal_ReadKey_CheckEPhS0_S0_P11tAsyncCall__param_2,
	.param .b64 _ZN44_INTERNAL_22_System_Console_cpp1_ii_60669a0722Internal_ReadKey_CheckEPhS0_S0_P11tAsyncCall__param_3
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 0;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z31System_Console_Internal_ReadKeyPhS_S_
.visible .func  (.param .b64 func_retval0) _Z31System_Console_Internal_ReadKeyPhS_S_(
	.param .b64 _Z31System_Console_Internal_ReadKeyPhS_S__param_0,
	.param .b64 _Z31System_Console_Internal_ReadKeyPhS_S__param_1,
	.param .b64 _Z31System_Console_Internal_ReadKeyPhS_S__param_2
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<5>;


	mov.u64 	%rd1, 32;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z7Gmallocy, 
	(
	param0
	);
	ld.param.b64	%rd2, [retval0+0];
	
	//{
	}// Callseq End 1
	mov.u32 	%r1, -1;
	st.u32 	[%rd2], %r1;
	mov.u64 	%rd3, _ZN44_INTERNAL_22_System_Console_cpp1_ii_60669a0722Internal_ReadKey_CheckEPhS0_S0_P11tAsyncCall_;
	st.u64 	[%rd2+8], %rd3;
	mov.u64 	%rd4, 0;
	st.u64 	[%rd2+16], %rd4;
	st.param.b64	[func_retval0+0], %rd2;
	ret;
}

	// .globl	_Z36System_Console_Internal_KeyAvailablePhS_S_
.visible .func  (.param .b64 func_retval0) _Z36System_Console_Internal_KeyAvailablePhS_S_(
	.param .b64 _Z36System_Console_Internal_KeyAvailablePhS_S__param_0,
	.param .b64 _Z36System_Console_Internal_KeyAvailablePhS_S__param_1,
	.param .b64 _Z36System_Console_Internal_KeyAvailablePhS_S__param_2
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_Z36System_Console_Internal_KeyAvailablePhS_S__param_2];
	mov.u32 	%r1, 0;
	st.u32 	[%rd1], %r1;
	mov.u64 	%rd2, 0;
	st.param.b64	[func_retval0+0], %rd2;
	ret;
}


