//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-22781540
// Cuda compilation tools, release 9.0, V9.0.176
// Based on LLVM 3.4svn
//

.version 6.0
.target sm_30
.address_size 64

	// .globl	_Z28System_Threading_Thread_ctorPhS_S_
.extern .func  (.param .b64 func_retval0) _Z6Threadv
(

)
;
.extern .func  (.param .b64 func_retval0) _Z26Delegate_GetMethodAndStorePvPPhPS_
(
	.param .b64 _Z26Delegate_GetMethodAndStorePvPPhPS__param_0,
	.param .b64 _Z26Delegate_GetMethodAndStorePvPPhPS__param_1,
	.param .b64 _Z26Delegate_GetMethodAndStorePvPPhPS__param_2
)
;
.extern .func _Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj
(
	.param .b64 _Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj_param_0,
	.param .b64 _Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj_param_1,
	.param .b32 _Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj_param_2,
	.param .b64 _Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj_param_3,
	.param .b32 _Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj_param_4
)
;
.extern .func  (.param .b64 func_retval0) _Z9gpumallocy
(
	.param .b64 _Z9gpumallocy_param_0
)
;
.extern .func  (.param .b64 func_retval0) _Z17Thread_GetCurrentv
(

)
;

.visible .func  (.param .b64 func_retval0) _Z28System_Threading_Thread_ctorPhS_S_(
	.param .b64 _Z28System_Threading_Thread_ctorPhS_S__param_0,
	.param .b64 _Z28System_Threading_Thread_ctorPhS_S__param_1,
	.param .b64 _Z28System_Threading_Thread_ctorPhS_S__param_2
)
{
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_Z28System_Threading_Thread_ctorPhS_S__param_1];
	ld.param.u64 	%rd2, [_Z28System_Threading_Thread_ctorPhS_S__param_2];
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6Threadv, 
	(
	);
	ld.param.b64	%rd3, [retval0+0];
	
	//{
	}// Callseq End 0
	ld.u64 	%rd4, [%rd1];
	st.u64 	[%rd3+8], %rd4;
	st.u64 	[%rd2], %rd3;
	mov.u64 	%rd5, 0;
	st.param.b64	[func_retval0+0], %rd5;
	ret;
}

	// .globl	_Z33System_Threading_Thread_ctorParamPhS_S_
.visible .func  (.param .b64 func_retval0) _Z33System_Threading_Thread_ctorParamPhS_S_(
	.param .b64 _Z33System_Threading_Thread_ctorParamPhS_S__param_0,
	.param .b64 _Z33System_Threading_Thread_ctorParamPhS_S__param_1,
	.param .b64 _Z33System_Threading_Thread_ctorParamPhS_S__param_2
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_Z33System_Threading_Thread_ctorParamPhS_S__param_1];
	ld.param.u64 	%rd2, [_Z33System_Threading_Thread_ctorParamPhS_S__param_2];
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6Threadv, 
	(
	);
	ld.param.b64	%rd3, [retval0+0];
	
	//{
	}// Callseq End 1
	ld.u64 	%rd4, [%rd1];
	st.u64 	[%rd3+8], %rd4;
	st.u64 	[%rd2], %rd3;
	mov.u32 	%r1, 1;
	st.u32 	[%rd3+96], %r1;
	mov.u64 	%rd5, 0;
	st.param.b64	[func_retval0+0], %rd5;
	ret;
}

	// .globl	_Z29System_Threading_Thread_StartPhS_S_
.visible .func  (.param .b64 func_retval0) _Z29System_Threading_Thread_StartPhS_S_(
	.param .b64 _Z29System_Threading_Thread_StartPhS_S__param_0,
	.param .b64 _Z29System_Threading_Thread_StartPhS_S__param_1,
	.param .b64 _Z29System_Threading_Thread_StartPhS_S__param_2
)
{
	.local .align 16 .b8 	__local_depot2[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<18>;


	mov.u64 	%rd17, __local_depot2;
	cvta.local.u64 	%SP, %rd17;
	ld.param.u64 	%rd5, [_Z29System_Threading_Thread_StartPhS_S__param_0];
	add.u64 	%rd6, %SP, 0;
	cvta.to.local.u64 	%rd7, %rd6;
	add.u64 	%rd8, %SP, 16;
	cvta.to.local.u64 	%rd1, %rd8;
	ld.u32 	%r5, [%rd5+24];
	and.b32  	%r6, %r5, 4;
	st.u32 	[%rd5+24], %r6;
	ld.u64 	%rd9, [%rd5+8];
	mov.u64 	%rd10, 0;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd10;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z26Delegate_GetMethodAndStorePvPPhPS_, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rd3, [retval0+0];
	
	//{
	}// Callseq End 2
	ld.local.u64 	%rd4, [%rd7];
	setp.eq.s64	%p1, %rd4, 0;
	mov.u32 	%r10, 0;
	@%p1 bra 	BB2_2;

	st.local.u64 	[%rd1], %rd4;
	mov.u32 	%r10, 8;

BB2_2:
	ld.u32 	%r8, [%rd5+96];
	setp.eq.s32	%p2, %r8, 0;
	@%p2 bra 	BB2_4;

	ld.u64 	%rd11, [%rd5+16];
	mul.wide.u32 	%rd12, %r10, 8;
	add.s64 	%rd13, %rd1, %rd12;
	st.local.u64 	[%rd13], %rd11;
	add.s32 	%r10, %r10, 8;

BB2_4:
	ld.u64 	%rd14, [%rd3+8];
	ld.u32 	%r9, [%rd3+104];
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r9;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r10;
	call.uni 
	_Z20Thread_SetEntryPointP8tThread_P10tMetaData_jPhj, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3
	st.param.b64	[func_retval0+0], %rd10;
	ret;
}

	// .globl	_Z29System_Threading_Thread_SleepPhS_S_
.visible .func  (.param .b64 func_retval0) _Z29System_Threading_Thread_SleepPhS_S_(
	.param .b64 _Z29System_Threading_Thread_SleepPhS_S__param_0,
	.param .b64 _Z29System_Threading_Thread_SleepPhS_S__param_1,
	.param .b64 _Z29System_Threading_Thread_SleepPhS_S__param_2
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd1, [_Z29System_Threading_Thread_SleepPhS_S__param_1];
	mov.u64 	%rd2, 32;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z9gpumallocy, 
	(
	param0
	);
	ld.param.b64	%rd3, [retval0+0];
	
	//{
	}// Callseq End 4
	ld.u32 	%r1, [%rd1];
	st.u32 	[%rd3], %r1;
	st.param.b64	[func_retval0+0], %rd3;
	ret;
}

	// .globl	_Z41System_Threading_Thread_get_CurrentThreadPhS_S_
.visible .func  (.param .b64 func_retval0) _Z41System_Threading_Thread_get_CurrentThreadPhS_S_(
	.param .b64 _Z41System_Threading_Thread_get_CurrentThreadPhS_S__param_0,
	.param .b64 _Z41System_Threading_Thread_get_CurrentThreadPhS_S__param_1,
	.param .b64 _Z41System_Threading_Thread_get_CurrentThreadPhS_S__param_2
)
{
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd1, [_Z41System_Threading_Thread_get_CurrentThreadPhS_S__param_2];
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 retval0;
	call.uni (retval0), 
	_Z17Thread_GetCurrentv, 
	(
	);
	ld.param.b64	%rd2, [retval0+0];
	
	//{
	}// Callseq End 5
	st.u64 	[%rd1], %rd2;
	mov.u64 	%rd3, 0;
	st.param.b64	[func_retval0+0], %rd3;
	ret;
}


